:host {
  display: block;
  width: 100%;
  height: 100%;
  font-family: var(--font-family);
}

/* Board container */
.board-container {
  display: flex;
  flex-direction: column;
  height: 100vh;
  background-color: var(--surface-ground);
  color: var(--text-color);
}

/* Board header */
.board-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1rem 1.5rem;
  background-color: var(--surface-card);
  box-shadow: var(--card-shadow);
  z-index: 10;
  position: relative;
}

.board-title {
  font-size: 1.5rem;
  font-weight: 700;
  margin: 0;
  color: var(--text-color);
  letter-spacing: -0.01em;
}

.board-actions {
  display: flex;
  gap: 0.625rem;
}

/* Board content */
.board-content {
  flex: 1;
  overflow-x: auto;
  padding: 1.5rem;
}

.columns-container {
  display: flex;
  gap: 1.25rem;
  height: 100%;
  min-height: 0;
  padding-bottom: 0.5rem;
}

/* Column */
:host ::ng-deep .column {
  width: 300px;
  min-width: 300px;
  max-height: calc(100vh - 140px);
  margin-bottom: 0;
}

:host ::ng-deep .column .p-card-body {
  padding: 0;
}

:host ::ng-deep .column .p-card-content {
  padding: 0;
}

.column-title-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.5rem 1rem;
}

.column-title {
  font-size: 1rem;
  font-weight: 600;
  margin: 0;
  padding: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  cursor: pointer;
  color: var(--text-color);
  letter-spacing: -0.01em;
}

.column-actions {
  display: flex;
  gap: 0.375rem;
}

.column-edit {
  padding: 0.5rem 1rem;
  width: 100%;
}

/* Column tasks container */
.column-tasks {
  overflow-y: auto;
  padding: 0.5rem 1rem;
  min-height: 10px;
  max-height: calc(100vh - 230px);
}

/* Task card */
:host ::ng-deep .task-card {
  margin-bottom: 0.75rem;
  cursor: pointer;
  transition: all 0.2s ease;
  animation: fadeIn 0.3s ease-out;
}

:host ::ng-deep .task-card .p-card-body {
  padding: 0.75rem 1rem;
}

:host ::ng-deep .task-card:hover {
  transform: translateY(-2px);
  box-shadow: var(--card-shadow);
}

:host ::ng-deep .task-card:active {
  transform: translateY(0);
}

.task-labels {
  display: flex;
  flex-wrap: wrap;
  gap: 0.375rem;
  margin-bottom: 0.5rem;
}

.task-label {
  width: 36px;
  height: 8px;
  border-radius: 4px;
  transition: transform 0.2s ease;
}

.task-label:hover {
  transform: scaleX(1.05);
}

.task-title {
  font-size: 0.9375rem;
  margin-bottom: 0.625rem;
  line-height: 1.5;
  font-weight: 500;
  word-break: break-word;
  color: var(--text-color);
}

.task-footer {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: 0.75rem;
  color: var(--text-secondary-color);
  margin-top: 0.25rem;
}

.task-meta {
  display: flex;
  align-items: center;
  gap: 0.625rem;
}

.task-due {
  display: flex;
  align-items: center;
  gap: 0.25rem;
  border-radius: 4px;
  padding: 0.1875rem 0.375rem;
  font-weight: 500;
  font-size: 0.6875rem;
}

.task-overdue {
  background-color: var(--red-100);
  color: var(--red-700);
}

.task-due-soon {
  background-color: var(--yellow-100);
  color: var(--yellow-700);
}

.task-assignee {
  display: flex;
  align-items: center;
}

:host ::ng-deep .assignee-badge {
  width: 28px;
  height: 28px;
  border-radius: 50%;
  transition: transform 0.2s ease;
}

:host ::ng-deep .assignee-badge:hover {
  transform: scale(1.1);
}

.column-empty {
  color: var(--text-secondary-color);
  text-align: center;
  padding: 1.5rem 0;
  font-size: 0.875rem;
  font-style: italic;
  background-color: var(--surface-hover);
  border-radius: 8px;
  margin: 0.5rem 0;
}

/* New column form */
.new-column-form {
  padding: 1rem;
}

/* Add column button */
:host ::ng-deep .add-column-btn {
  height: fit-content;
  margin-top: 0;
}

/* Label selector */
.label-option {
  width: 40px;
  height: 24px;
  border-radius: 6px;
  cursor: pointer;
  transition: all 0.2s ease;
  position: relative;
}

.label-option:hover {
  transform: scale(1.05);
}

.label-option.selected::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background-color: rgba(255, 255, 255, 0.8);
}

/* Drag and drop styles */
.cdk-drag-preview {
  box-shadow: var(--card-shadow);
  opacity: 0.8;
  border-radius: 8px;
}

.cdk-drag-placeholder {
  opacity: 0.3;
}

.cdk-drag-animating {
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

.column-tasks.cdk-drop-list-dragging .task-card:not(.cdk-drag-placeholder) {
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

.column-tasks.cdk-drop-list-receiving {
  background-color: var(--primary-50);
  border-radius: 8px;
}

/* Responsive styles */
@media (max-width: 768px) {
  .board-header {
    flex-direction: column;
    align-items: flex-start;
    gap: 0.75rem;
    padding: 1rem;
  }

  .board-actions {
    width: 100%;
    justify-content: flex-end;
  }

  .board-content {
    padding: 1rem;
  }

  :host ::ng-deep .column {
    width: 280px;
    min-width: 280px;
  }
}

/* Animation for new tasks */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.new-task-animation {
  animation: fadeIn 0.3s ease-out;
}

/* Accessibility enhancements */
.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

:focus-visible {
  outline: 3px solid var(--primary-color);
  outline-offset: 2px;
}

.screen-reader-text {
  clip: rect(1px, 1px, 1px, 1px);
  clip-path: inset(50%);
  height: 1px;
  width: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
}
